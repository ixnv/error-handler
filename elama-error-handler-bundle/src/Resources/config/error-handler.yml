error_handler:
    matchers:
        fatal: ~
        exception: ~
        user_error: ~
        unknown_file: ~
    log_path: %kernel.logs_dir%/ErrorHandler
    logger: elama.error_handler_logger

services:
    elama.error_handler:
        class: eLama\ErrorHandler\ErrorHandler
        factory_class: eLama\ErrorHandler\ErrorHandlerContainer
        factory_method: getErrorHandler

    elama.error_handler.request_listener:
        class: eLama\ErrorHandler\Bundle\EventListener\ErrorHandlerInitializer
        arguments:
            - @service_container
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 255 }
            - { name: kernel.event_listener, event: console.command, method: onCommand, priority: 255 }

    core.exceptlistener:
        class: eLama\ErrorHandler\Bundle\EventListener\SymfonyExceptionHandler
        calls:
            - ["stopRenderExceptionErrorPage"]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onException, priority: 0 }
            - { name: kernel.event_listener, event: console.exception, method: onException, priority: 255 }


    elama.error_handler_logger:
        class: Monolog\Logger
        factory_class: eLama\ErrorHandler\LoggerFactory
        factory_method: createLogger
        arguments:
            - %error_handler.log_path%
        calls:
            - [pushHandler, [@elk_log_handler]]

    elk_log_handler:
        class: Monolog\Handler\AmqpHandler
        factory_class: eLama\ErrorHandler\Bundle\ElkHandlerFactory
        factory_method: create
        arguments:
            - @service_container

    graylog_handler:
        class: Monolog\Handler\GelfHandler
        factory_class: eLama\ErrorHandler\Bundle\GraylogHandlerFactory
        factory_method: create
        arguments:
            - @service_container
